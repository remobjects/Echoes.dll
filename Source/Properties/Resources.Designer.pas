//------------------------------------------------------------------------------
// <autogenerated>
//     This Oxygene source code was generated by a tool.
//     Runtime Version: 4.0.30319.42000
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

{$HIDE H7}
{$HIDE W1}
{$HIDE W27}
{$HIDE H11}

namespace RemObjects.Oxygene.Dynamic.Properties;

uses
    System;
    
type
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [System.CodeDom.Compiler.GeneratedCodeAttribute('System.Resources.Tools.StronglyTypedResourceBuilder', '4.0.0.0')]
    [System.Diagnostics.DebuggerNonUserCodeAttribute]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute]
    Resources = class
    private 
    
        class var resourceMan: System.Resources.ResourceManager;
        class var resourceCulture: System.Globalization.CultureInfo;
        
        class method get_ResourceManager: System.Resources.ResourceManager;
        begin
            if System.Object.ReferenceEquals(resourceMan, nil) then begin
                var temp: System.Resources.ResourceManager := new System.Resources.ResourceManager('RemObjects.Oxygene.Dynamic.Properties.Resources', typeOf(Resources).Assembly);
                resourceMan := temp;
            end;
            exit resourceMan;
        end;
        
        class method get_Culture: System.Globalization.CultureInfo;
        begin
            exit resourceCulture;
        end;
        
        class method set_Culture(value: System.Globalization.CultureInfo);
        begin
            resourceCulture := value;
        end;
        
        class method get_strAmbigiousOverload: System.String;
        begin
            exit ResourceManager.GetString('strAmbigiousOverload', resourceCulture);
        end;
        
        class method get_strAmbigiousOverloadStr: System.String;
        begin
            exit ResourceManager.GetString('strAmbigiousOverloadStr', resourceCulture);
        end;
        
        class method get_strCannotInvokeNonDelegate: System.String;
        begin
            exit ResourceManager.GetString('strCannotInvokeNonDelegate', resourceCulture);
        end;
        
        class method get_strInvalidIndexedFieldType: System.String;
        begin
            exit ResourceManager.GetString('strInvalidIndexedFieldType', resourceCulture);
        end;
        
        class method get_strInvalidOperands: System.String;
        begin
            exit ResourceManager.GetString('strInvalidOperands', resourceCulture);
        end;
        
        class method get_strInvalidOperator: System.String;
        begin
            exit ResourceManager.GetString('strInvalidOperator', resourceCulture);
        end;
        
        class method get_strNoConstructors: System.String;
        begin
            exit ResourceManager.GetString('strNoConstructors', resourceCulture);
        end;
        
        class method get_strNoDefaultProperty: System.String;
        begin
            exit ResourceManager.GetString('strNoDefaultProperty', resourceCulture);
        end;
        
        class method get_strNoIndexedProperties: System.String;
        begin
            exit ResourceManager.GetString('strNoIndexedProperties', resourceCulture);
        end;
        
        class method get_strNoMethodsByThatName: System.String;
        begin
            exit ResourceManager.GetString('strNoMethodsByThatName', resourceCulture);
        end;
        
        class method get_strNoOverloadWithTheseParameters: System.String;
        begin
            exit ResourceManager.GetString('strNoOverloadWithTheseParameters', resourceCulture);
        end;
        
        class method get_strNoPropertiesByThatName: System.String;
        begin
            exit ResourceManager.GetString('strNoPropertiesByThatName', resourceCulture);
        end;
        
    assembly 
    
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        class property ResourceManager: System.Resources.ResourceManager read get_ResourceManager;
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        class property Culture: System.Globalization.CultureInfo read get_Culture write set_Culture;
        class property strAmbigiousOverload: System.String read get_strAmbigiousOverload;
        class property strAmbigiousOverloadStr: System.String read get_strAmbigiousOverloadStr;
        class property strCannotInvokeNonDelegate: System.String read get_strCannotInvokeNonDelegate;
        class property strInvalidIndexedFieldType: System.String read get_strInvalidIndexedFieldType;
        class property strInvalidOperands: System.String read get_strInvalidOperands;
        class property strInvalidOperator: System.String read get_strInvalidOperator;
        class property strNoConstructors: System.String read get_strNoConstructors;
        class property strNoDefaultProperty: System.String read get_strNoDefaultProperty;
        class property strNoIndexedProperties: System.String read get_strNoIndexedProperties;
        class property strNoMethodsByThatName: System.String read get_strNoMethodsByThatName;
        class property strNoOverloadWithTheseParameters: System.String read get_strNoOverloadWithTheseParameters;
        class property strNoPropertiesByThatName: System.String read get_strNoPropertiesByThatName;
        
    assembly 
    
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute('Microsoft.Performance', 'CA1811:AvoidUncalledPrivateCode')]
        constructor;
        begin
        end;
        
    end;
    
end.
